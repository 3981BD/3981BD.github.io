name: astro-page-build

on:
  push:
    branches: [ main ]
  pull_request_target:
  merge_group:

jobs:
  astro-build:
    permissions:
      # Only allow read token for building
      contents: read
    runs-on: ubuntu-latest

    steps:
      #
      # Separate PR checkout when event is pull_request_target
      #
    - name: Checkout PR
      if: ${{ github.event_name == 'pull_request_target' }}
      uses: actions/checkout@v4
      with:
        # For PRs make sure to checkout the PR branch
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}

      #
      # Normal checkout without forks
      #
    - name: Checkout
      if: ${{ github.event_name != 'pull_request_target' }}
      uses: actions/checkout@v4

      # We should check to see if the latest commit is already deployed
      # If it is and this commit is older, don't continue.
    - name: Check if commit is the latest
      id: check
      run: |
        import subprocess
        import os
        from urllib.request import urlopen
        latest_commit = subprocess.getoutput('git rev-parse HEAD').strip()
        github_sha = os.environ('GITHUB_SHA')
        pages_build_version = urlopen('https://subdomain.func.host/pages-build-version').read().decode()
        print(f"::notice::latest_commit: {latest_commit}")
        print(f"::notice::GITHUB_SHA: {github_sha}")
        print(f"::notice::pages-build-version: {pages_build_version}")
      env:
        GITHUB_SHA: ${{ github.sha }}
      shell: python

    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present

    - name: Archive build output
      run: "tar --dereference --directory dist/ -cvf artifact.tar ."
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: github-pages
        path: artifact.tar
  deploy:
    # Required: Pages permissions for deploying
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: astro-build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy artifact
        id: deployment
        uses: actions/deploy-pages@v3
        with:
          # Deploy Pull Request builds to a preview site
          preview: ${{ github.event_name == 'pull_request_target' }}
